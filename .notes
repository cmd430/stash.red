-= TODO =-
  Impliment album downloading with https://www.npmjs.com/package/archiver
    -> example https://medium.com/@abhinavk9757/how-to-zip-multiple-streaming-files-in-nodejs-679a6e9d625f
    -> example (s3 but same idea) https://github.com/andychukse/s3downloadzip/blob/master/index.js
  File downloading for Video and Audio
  Upload files while viewing an owned album to add files to album
  Album title renaming
  Check Signups, Logins working
  Add capture to signup (maybe login?)
  Routes to Delete files/albums if you own them
  Front end JS so the site works
  Make homepage tell you you need to login before you can upload
  Go over all the styles to make them less shit
  Readme

-= Things needed for Feature parity with stash =-
  [ ] Album downloading
  [ ] File downloading
  [ ] Album file uploading
  [ ] Album title renaming
  [ ] File deleting
  [ ] Album deleting
  [ ] upload TTL
  [ ] upload is private
  [ ] upload dont form album
  [ ] sign up capture (maybe login capture?)
  [-] Front end JS and CSS to make it all work
    -> Im going to use modules for JS for reused stuff and have .js files for each component
    -> Likewise im going to have individual css for each component (compiled from scss)
      -> using css will eliminate the need to do @imports and allow me to have sizes, colors etc imported at compile time
    -> For example on how to load the styles/javascript take a look at dropzone.hbs

-= References =-
  -> https://fastify.dev/docs
  -> https://github.com/WiseLibs/better-sqlite3/blob/HEAD/docs/api.md
  -> https://handlebarsjs.com/guide/
  -> https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-nodejs?tabs=managed-identity%2Croles-azure-portal%2Csign-in-azure-cli

-= URL references =-

  ! nginx rewrite for old urls !
  server {
    server_name direct.stash.red;

    location / {
      rewrite ^ $scheme://stash.red/f$request_uri permanent;
    }

    listen 80;
  }

  ## URL Scheme Plan:
    - `/f/:id` for files
    - `/f/:id.:ext` file direct files
    - `/a/:id` for albums
    - `/u/:username` for users

